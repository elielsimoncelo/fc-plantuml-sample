@startuml diagrama

!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!includeurl ICONURL/devicons/go.puml

AddRelTag("async", $lineStyle = DashedLine())

SHOW_PERSON_PORTRAIT()

Person(client, "Client", "Sistema que solicita o pagamento")
Person(admin, "Administrador", "Acompanha as transacoes de pagamentos")
Person(superadmin, "Administrador do Gateway", "Acompanha as métricas transacoes de pagamentos")

System_Boundary(gateway, "Gateway de Pagamentos") {
Container(frontend, "Painel de Controle", "Next.js", "Monitora o status das transações de pagamentos")

Container(backend, "Backend", "Nest.js", "Sistema que recebe a solicitação de pagamento")

Container(processor, "Processador de pagamentos", "Go", "Processa authorizando ou rejeitando o pagamento", $sprite = "go") 

Container(prometheus, "Métricas de Pagamentos", "Prometheus", "Armazena as métricas de pagamentos") 

Container(grafana, "Dashboard de Métricas", "Grafana", "Exibe as métricas de pagamentos")

ContainerDb(mysql_backend, "Banco de dados", "MySQL", "Armazena as transações de pagamento")

ContainerDb(mysql_processor, "Banco de dados", "MySQL", "Armazena as transações de pagamento")

Rel(client, backend, "Solicita pagamento em", "HTTPS/JSON")
Rel(admin, frontend, "Solicita das transacoes dos pagamentos em", "HTTPS")
Rel(superadmin, grafana, "Consome as métricas das transacoes dos pagamentos em", "HTTPS")

Rel(frontend, backend, "Recupera as informações de pagamento", "HTTPS/JSON")
Rel(backend, processor, "Envia os dados de paragamento para", "Através do kafka pelo tópico: transactions", $tags = "async")
Rel(processor, backend, "Envia o resultado da transacao", "Através do kafka pelo tópico: transactions_results", $tags = "async")
Rel(backend, mysql_backend, "Recebe os dados do pagamento", "Mysql Protocol")
Rel(processor, mysql_processor, "Recebe os dados do pagamento", "Mysql Protocol")
Rel(prometheus, processor, "Recebe as métricas de pagamentos em", "HTTP/TXT")
Rel(grafana, prometheus, "Consome métricas de pagamentos em", "PromQL")
}

@enduml